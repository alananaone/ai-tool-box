# ai_config.py

# ==============================================================================
#                                  模型設定
# ==============================================================================
# 將所有模型名稱集中管理，方便未來統一更換或升級
MODEL_CONFIG = {
    # 用於快速、大量的 OCR 任務，成本較低
    "OCR": "gemini-2.5-flash-preview-05-20",

    # 用於需要深度理解和結構化輸出的摘要任務，效果較好
    "SUMMARIZE": "gemini-1.5-flash-latest",

    # 用於需要精確分析文件結構（如目錄）的任務，使用最強的模型
    "PDF_SPLIT_ANALYSIS": "gemini-1.5-pro-latest",

    # 用於即時聊天，兼顧速度與能力
    "CHAT": "gemini-1.5-flash-latest"
}


# ==============================================================================
#                                  Prompts
# ==============================================================================
# 將所有 Prompts 集合於此，方便統一調整語氣、指令和格式
PROMPTS = {
    "OCR_TRANSLATE": """
請辨識這張圖片中的主要內文文字，忽略頁首和頁尾的資訊，並將辨識出的主要內文完整翻譯成「繁體中文」。
請只輸出最終的「繁體中文翻譯結果」，並盡可能還原原文的格式。
注意：參考文獻（Reference）的部分不用進行文字辨識與翻譯。
""",

    "OCR_ONLY": """
你是一個精確的 OCR (光學字元辨識) 引擎。你的任務是辨識圖片中的所有文字，並以原始語言和格式輸出。
- **請勿翻譯**任何內容。
- 忽略頁碼、頁首、頁尾等非主要內文。
- 忽略圖表、圖片或其他非文字內容。
- 盡可能保持原始的段落結構，惟換行部分不需按照原文，自動換行即可。遇到 - 斷行的情況，請將其視為自然換行。
- 如果內容包含中文，請使用全形標點符號。
請直接輸出辨識出的文字。
""",

    "SUMMARY": """
請仔細閱讀並理解以下提供的文件全文。
你的任務是為這份文件生成一份【詳盡】、【保留所有重要資訊】且【結構清晰、層次分明】的【繁體中文】摘要。

請嚴格遵循以下指示進行摘要與格式化：

1.  **識別主要主題：** 從文本中識別出最高層級的主要主題或章節。
2.  **識別子主題：** 在每個主要主題下，識別出次要的子主題或代表原始文件主要段落的核心概念。
3.  **使用 Markdown 標示層級與細節：**
    *   對於識別出的**主要主題/章節**，使用 Markdown 的 Heading 1 語法 (`# 主要主題文字`)。
    *   在每個主要主題下方，對於**子主題/核心概念**，使用 Markdown 的 Heading 2 語法 (`## 子主題文字`)。
    *   在每個 `## 子主題` 下方，使用**項目符號 (bullet points)** (`* ` 或 `- `) 來條列式摘要該子主題相關的所有關鍵定義、細節、範例、效果、風險等。
        *   **重要：** 這些項目符號的內容和順序，應盡可能**反映原文件中與該子主題相關段落的資訊流和結構**。
        *   **重要：** 如果某個要點下有更細節的說明或從屬資訊，請在提示模型時想像使用**縮排**來表示下一層的項目符號。
4.  **內容要求：**
    *   摘要必須【極力保留原文的所有關鍵資訊】，包括但不限於定義、分類、數據、背景、機制、影響、用途、問題、風險、結論等。**確保不遺漏重要細節**。
    *   確保摘要的邏輯流暢，且項目符號下的內容確實反映了原文相應部分的重點。
5.  **格式要求：** 確保輸出的 Markdown 格式（主要依賴 `#`, `##`, `* `）正確、層次清晰，以便後續程式能準確解析。
6.  **輸出限制：** 請【只輸出】符合上述格式要求的完整 Markdown 摘要內容，不要包含任何額外的前言、結語或與摘要無關的文字。輸出應直接從第一個 `# 主要主題` 開始。

以下是需要摘要的文件全文：
---
{document_text}
---
""",

    "PDF_SPLIT_TOC_ANALYSIS": """
你是一個專業的文件分析助理。你的任務是分析給定的 PDF 頁面圖片，找出文件目錄（Table of Contents），並以 JSON 格式輸出目錄結構。

**分析指令:**
1.  **仔細檢查所有圖片**：這些圖片來自一份 PDF 文件的前幾頁和後幾頁，目錄通常在這裡。
2.  **識別目錄結構**：找出章節標題和它們對應的【印刷頁碼】（即頁面上顯示的數字，而不是 PDF 閱讀器中的頁面索引）。
3.  **處理多層級目錄**：如果目錄有子章節（例如 1.1, 1.2），也請包含它們。
4.  **識別特殊章節**：除了常規章節，也要識別如 "摘要" (Abstract), "前言" (Introduction), "結論" (Conclusion), "參考文獻" (References), "附錄" (Appendix) 等特殊部分。
5.  **格式化輸出**：將結果組織成一個 JSON 陣列。陣列中的每個物件代表一個目錄項目，並包含兩個鍵：
    *   `"title"`: (string) 完整的章節標題。
    *   `"page"`: (integer) 該章節開始的【印刷頁碼】。

**輸出範例:**
```json
[
  {
    "title": "摘要",
    "page": 1
  },
  {
    "title": "第一章 緒論",
    "page": 3
  },
  {
    "title": "1.1 研究背景",
    "page": 4
  },
  {
    "title": "1.2 研究目的",
    "page": 6
  },
  {
    "title": "第五章 結論與建議",
    "page": 85
  },
  {
    "title": "參考文獻",
    "page": 92
  },
  {
    "title": "附錄A",
    "page": 98
  }
]
"""}